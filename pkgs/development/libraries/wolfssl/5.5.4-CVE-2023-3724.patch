based on upstream 00f1eddee429ff51390b20caadd2eb6afe51e1aa with
minor adjustments to apply to 5.5.4

diff --git a/src/tls.c b/src/tls.c
index 27c1002b2..f8a9aaa48 100644
--- a/src/tls.c
+++ b/src/tls.c
@@ -8346,6 +8346,9 @@ static int TLSX_KeyShare_Parse(WOLFSSL* ssl, const byte* input, word16 length,
         if (!WOLFSSL_NAMED_GROUP_IS_PQC(group))
 #endif
             ret = TLSX_KeyShare_Use(ssl, group, 0, NULL, NULL);
+
+        if (ret == 0)
+            ssl->session->namedGroup = ssl->namedGroup = group;
     }
     else {
         /* Not a message type that is allowed to have this extension. */
diff --git a/src/tls13.c b/src/tls13.c
index 42eb7ffce..194870a69 100644
--- a/src/tls13.c
+++ b/src/tls13.c
@@ -4725,8 +4725,18 @@ int DoTls13ServerHello(WOLFSSL* ssl, const byte* input, word32* inOutIdx,
         }
 #endif
 
+        /* sanity check on PSK / KSE */
+        if (
+    #if defined(HAVE_SESSION_TICKET) || !defined(NO_PSK)
+            ssl->options.pskNegotiated == 0 &&
+    #endif
+            ssl->session->namedGroup == 0) {
+            return EXT_MISSING;
+        }
+
         ssl->keys.encryptionOn = 1;
         ssl->options.serverState = SERVER_HELLO_COMPLETE;
+
     }
     else {
         ssl->options.tls1_3 = 1;
